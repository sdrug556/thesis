{"version":3,"file":"index.mjs","sources":["../src/utils/error.ts","../src/utils/file-name.ts","../src/utils/has-property.ts","../src/utils/object.ts","../src/utils/to-array.ts","../src/locator/utils.ts","../src/locator/async.ts","../src/locator/sync.ts","../src/loader/utils.ts","../src/loader/file-type/script/utils.ts","../src/loader/file-type/script/async.ts","../src/loader/file-type/script/sync.ts","../src/loader/file-type/json.ts","../src/loader/module.ts"],"sourcesContent":["/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\n/* istanbul ignore next */\nexport function handleFileLoadError(e: unknown) : void {\n    if (e instanceof Error) {\n        throw e;\n    }\n\n    if (typeof e === 'string') {\n        throw new Error(e);\n    }\n\n    throw new Error('Cannot determine file loading error.');\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function removeFileNameExtension(\n    input: string,\n    extensions?: string[],\n) {\n    if (input.includes('.')) {\n        const position = input.lastIndexOf('.');\n        const extension = input.substring(\n            position,\n            input.length,\n        );\n\n        if (\n            typeof extensions === 'undefined' ||\n            extensions.indexOf(extension) !== -1\n        ) {\n            input = input.substring(0, position);\n        }\n    }\n\n    return input;\n}\n","export function hasOwnProperty<X extends Record<string, any>, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function hasStringProperty<X extends Record<string, any>, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, string> {\n    return hasOwnProperty(obj, prop) && typeof obj[prop] === 'string';\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function isObject(item: unknown) : item is Record<string, any> {\n    return (\n        !!item &&\n        typeof item === 'object' &&\n        !Array.isArray(item)\n    );\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function toArray(input: string | string[]) : string[] {\n    return Array.isArray(input) ? input : [input];\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport path from 'node:path';\nimport { LocatorInfo, LocatorOptions } from './type';\nimport { toArray } from '../utils';\n\nexport function buildLocatorOptions(options?: Partial<LocatorOptions>) : LocatorOptions {\n    options = options || {};\n\n    options.path = options.path || [];\n    options.path = toArray(options.path);\n    if (options.path.length === 0) {\n        options.path.push(process.cwd());\n    }\n\n    options.ignore ??= [];\n\n    return options as LocatorOptions;\n}\n\nexport function pathToLocatorInfo(\n    input: string,\n    skipResolve?: boolean,\n) : LocatorInfo {\n    if (!skipResolve && !path.isAbsolute(input)) {\n        input = path.resolve(process.cwd(), input);\n    }\n\n    const info = path.parse(input);\n\n    return {\n        path: info.dir.split('/').join(path.sep),\n        name: info.name,\n        extension: info.ext,\n    };\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport glob from 'glob';\nimport { promisify } from 'node:util';\nimport { LocatorInfo, LocatorOptions } from './type';\nimport { buildLocatorOptions, pathToLocatorInfo } from './utils';\n\nconst globAsync = promisify(glob);\n\nexport async function locateFiles(\n    pattern: string | string[],\n    options?: Partial<LocatorOptions>,\n) : Promise<LocatorInfo[]> {\n    options = buildLocatorOptions(options);\n\n    const patterns = Array.isArray(pattern) ?\n        pattern :\n        [pattern];\n\n    const items : LocatorInfo[] = [];\n\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < (options as LocatorOptions).path.length; j++) {\n            const files = await globAsync(patterns[i] as string, {\n                absolute: true,\n                cwd: (options as LocatorOptions).path[j],\n                nodir: true,\n                ignore: options.ignore,\n            });\n\n            for (let k = 0; k < files.length; k++) {\n                items.push(pathToLocatorInfo(files[k] as string, true));\n            }\n        }\n    }\n\n    return items;\n}\n\nexport async function locateFile(\n    pattern: string | string[],\n    options?: Partial<LocatorOptions>,\n) : Promise<LocatorInfo | undefined> {\n    options = buildLocatorOptions(options);\n\n    const patterns = Array.isArray(pattern) ?\n        pattern :\n        [pattern];\n\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < (options as LocatorOptions).path.length; j++) {\n            const files = await globAsync(patterns[i] as string, {\n                absolute: true,\n                cwd: (options as LocatorOptions).path[j],\n                nodir: true,\n                ignore: options.ignore,\n            });\n\n            const element = files.shift();\n            if (element) {\n                return pathToLocatorInfo(element, true);\n            }\n        }\n    }\n\n    return undefined;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport glob from 'glob';\nimport { LocatorInfo, LocatorOptions } from './type';\nimport { buildLocatorOptions, pathToLocatorInfo } from './utils';\n\nexport function locateFilesSync(\n    pattern: string | string[],\n    options?: Partial<LocatorOptions>,\n) : LocatorInfo[] {\n    options = buildLocatorOptions(options);\n\n    const patterns = Array.isArray(pattern) ?\n        pattern :\n        [pattern];\n\n    const items : LocatorInfo[] = [];\n\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < (options as LocatorOptions).path.length; j++) {\n            const files = glob.sync(patterns[i] as string, {\n                absolute: true,\n                cwd: (options as LocatorOptions).path[j],\n                nodir: true,\n                ignore: options.ignore,\n            });\n\n            for (let k = 0; k < files.length; k++) {\n                items.push(pathToLocatorInfo(files[k] as string, true));\n            }\n        }\n    }\n\n    return items;\n}\n\nexport function locateFileSync(\n    pattern: string | string[],\n    options?: Partial<LocatorOptions>,\n) : LocatorInfo | undefined {\n    options = buildLocatorOptions(options);\n\n    const patterns = Array.isArray(pattern) ?\n        pattern :\n        [pattern];\n\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < (options as LocatorOptions).path.length; j++) {\n            const files = glob.sync(patterns[i] as string, {\n                absolute: true,\n                cwd: (options as LocatorOptions).path[j],\n                nodir: true,\n                ignore: options.ignore,\n            });\n\n            const element = files.shift();\n            if (element) {\n                return pathToLocatorInfo(element, true);\n            }\n        }\n    }\n\n    return undefined;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport path from 'node:path';\nimport { LocatorInfo } from '../locator';\n\nexport function buildLoaderFilePath(info: LocatorInfo, withExtension?: boolean) {\n    if (withExtension) {\n        return path.join(info.path, info.name) + info.extension;\n    }\n\n    return path.join(info.path, info.name);\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { BaseError } from 'ebec';\nimport { hasOwnProperty } from '../../../utils';\nimport { LoaderFilterFn, ScriptFileExportItem } from './type';\n\nexport function getExportItem(\n    data: Record<string, any>,\n    filterFn?: LoaderFilterFn,\n) : ScriptFileExportItem {\n    if (filterFn) {\n        const keys = Object.keys(data);\n        for (let i = 0; i < keys.length; i++) {\n            if (filterFn(keys[i] as string, data[keys[i] as string])) {\n                return {\n                    key: keys[i] as string,\n                    value: data[keys[i] as string],\n                };\n            }\n        }\n\n        throw new BaseError('Cannot find specific module export.');\n    }\n\n    return {\n        key: 'default',\n        value: hasOwnProperty(data, 'default') ? data.default : data,\n    };\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { BaseError } from 'ebec';\nimport { pathToFileURL } from 'node:url';\nimport { LocatorInfo, pathToLocatorInfo } from '../../../locator';\nimport {\n    handleFileLoadError, hasStringProperty, isObject,\n} from '../../../utils';\nimport { buildLoaderFilePath } from '../../utils';\nimport { LoaderFilterFn, ScriptFileExportItem, ScriptFileLoadOptions } from './type';\nimport { getExportItem } from './utils';\n\nexport async function loadScriptFile(\n    data: LocatorInfo | string,\n    options?: ScriptFileLoadOptions,\n) : Promise<unknown> {\n    let locatorInfo : LocatorInfo;\n\n    if (typeof data === 'string') {\n        locatorInfo = pathToLocatorInfo(data);\n    } else {\n        locatorInfo = data;\n    }\n\n    options = options || {};\n\n    let filePath = buildLoaderFilePath(locatorInfo, options.withExtension);\n    if (options.withFilePrefix) {\n        filePath = pathToFileURL(filePath).href;\n    }\n\n    try {\n        return await import(filePath);\n    } catch (e) {\n        /* istanbul ignore next */\n        if (\n            isObject(e) &&\n            hasStringProperty(e, 'code')\n        ) {\n            if (\n                !options.withExtension &&\n                (\n                    e.code === 'ERR_MODULE_NOT_FOUND' ||\n                    e.code === 'MODULE_NOT_FOUND'\n                )\n            ) {\n                return loadScriptFile(locatorInfo, {\n                    ...options,\n                    withExtension: true,\n                });\n            }\n\n            if (\n                !options.withFilePrefix &&\n                (\n                    e.code === 'ERR_UNSUPPORTED_ESM_URL_SCHEME' ||\n                    e.code === 'UNSUPPORTED_ESM_URL_SCHEME'\n                )\n            ) {\n                return loadScriptFile(locatorInfo, {\n                    ...options,\n                    withFilePrefix: true,\n                });\n            }\n\n            throw new BaseError({\n                code: e.code,\n                message: hasStringProperty(e, 'message') ? e.message : undefined,\n                stack: hasStringProperty(e, 'stack') ? e.stack : undefined,\n            });\n        }\n\n        /* istanbul ignore next */\n        return handleFileLoadError(e);\n    }\n}\n\nexport async function loadScriptFileExport(\n    data: LocatorInfo | string,\n    filterFn?: LoaderFilterFn,\n) : Promise<ScriptFileExportItem> {\n    const output = await loadScriptFile(data);\n\n    if (typeof output === 'object' && !!output) {\n        return getExportItem(output, filterFn);\n    }\n\n    throw new BaseError('Cannot extract specific module export');\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { BaseError } from 'ebec';\nimport { LoaderFilterFn, ScriptFileExportItem, ScriptFileLoadOptions } from './type';\nimport { getExportItem } from './utils';\nimport { LocatorInfo, pathToLocatorInfo } from '../../../locator';\nimport { buildLoaderFilePath } from '../../utils';\nimport {\n    handleFileLoadError, hasStringProperty, isObject,\n} from '../../../utils';\n\nexport function loadScriptFileSync(\n    data: LocatorInfo | string,\n    options?: ScriptFileLoadOptions,\n) : unknown {\n    let locatorInfo : LocatorInfo;\n\n    if (typeof data === 'string') {\n        locatorInfo = pathToLocatorInfo(data);\n    } else {\n        locatorInfo = data;\n    }\n\n    options = options || {};\n\n    const filePath = buildLoaderFilePath(locatorInfo, options.withExtension);\n\n    try {\n        // eslint-disable-next-line global-require,import/no-dynamic-require\n        return require(filePath);\n    } catch (e) {\n        /* istanbul ignore next */\n        if (\n            isObject(e) &&\n            hasStringProperty(e, 'code')\n        ) {\n            if (\n                !options.withExtension &&\n                (\n                    e.code === 'ERR_MODULE_NOT_FOUND' ||\n                    e.code === 'MODULE_NOT_FOUND'\n                )\n            ) {\n                return loadScriptFileSync(locatorInfo, {\n                    ...options,\n                    withExtension: true,\n                });\n            }\n\n            throw new BaseError({\n                code: e.code,\n                message: hasStringProperty(e, 'message') ? e.message : undefined,\n                stack: hasStringProperty(e, 'stack') ? e.stack : undefined,\n            });\n        }\n\n        return handleFileLoadError(e);\n    }\n}\n\nexport function loadScriptFileExportSync(\n    data: LocatorInfo | string,\n    filterFn?: LoaderFilterFn,\n) : ScriptFileExportItem {\n    const output = loadScriptFileSync(data);\n\n    if (typeof output === 'object' && !!output) {\n        return getExportItem(output, filterFn);\n    }\n\n    throw new BaseError('Cannot extract specific module export');\n}\n","/*\n * Copyright (c) 2022-2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport fs from 'node:fs';\nimport path from 'node:path';\nimport { LocatorInfo } from '../../locator';\nimport { handleFileLoadError } from '../../utils';\nimport { buildLoaderFilePath } from '../utils';\n\nexport async function loadJsonFile(input: LocatorInfo | string) : Promise<unknown> {\n    let filePath : string;\n\n    if (typeof input === 'string') {\n        filePath = path.isAbsolute(input) ? input : path.resolve(process.cwd(), input);\n    } else {\n        filePath = buildLoaderFilePath(input, true);\n    }\n\n    try {\n        const file = await fs.promises.readFile(filePath);\n        return JSON.parse(file.toString('utf-8'));\n    } catch (e) {\n        return handleFileLoadError(e);\n    }\n}\n\nexport function loadJsonFileSync(input: LocatorInfo | string) : unknown {\n    let filePath : string;\n\n    if (typeof input === 'string') {\n        filePath = path.isAbsolute(input) ? input : path.resolve(process.cwd(), input);\n    } else {\n        filePath = buildLoaderFilePath(input, true);\n    }\n\n    try {\n        const file = fs.readFileSync(filePath);\n        return JSON.parse(file.toString('utf-8'));\n    } catch (e) {\n        return handleFileLoadError(e);\n    }\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { LocatorInfo, pathToLocatorInfo } from '../locator';\nimport {\n    loadJsonFile,\n    loadJsonFileSync,\n    loadScriptFile,\n    loadScriptFileSync,\n} from './file-type';\n\nexport async function loadFile(input: LocatorInfo | string) : Promise<unknown> {\n    let info : LocatorInfo;\n    if (typeof input === 'string') {\n        info = pathToLocatorInfo(input);\n    } else {\n        info = input;\n    }\n\n    if (info.extension === '.json') {\n        return loadJsonFile(info);\n    }\n\n    return loadScriptFile(info);\n}\n\nexport function loadFileSync(input: LocatorInfo | string) : unknown {\n    let info : LocatorInfo;\n    if (typeof input === 'string') {\n        info = pathToLocatorInfo(input);\n    } else {\n        info = input;\n    }\n\n    if (info.extension === '.json') {\n        return loadJsonFileSync(info);\n    }\n\n    return loadScriptFileSync(info);\n}\n"],"names":["handleFileLoadError","e","Error","removeFileNameExtension","input","extensions","includes","position","lastIndexOf","indexOf","extension","hasOwnProperty","obj","prop","hasStringProperty","isObject","item","_typeof","Array","isArray","toArray","buildLocatorOptions","options","_options","_options$ignore","path","length","ignore","pathToLocatorInfo","skipResolve","info","parse","globAsync","promisify","glob","locateFiles","_x","_x2","_locateFiles","apply","this","arguments","patterns","items","i","j","files","k","_regeneratorRuntime","wrap","_context","prev","next","absolute","cwd","nodir","abrupt","stop","_callee","locateFile","_x3","_x4","_locateFile","element","_context2","undefined","_callee2","locateFilesSync","pattern","locateFileSync","shift","buildLoaderFilePath","withExtension","join","name","getExportItem","data","filterFn","keys","Object","key","value","BaseError","loadScriptFile","_loadScriptFile","locatorInfo","filePath","sent","t0","code","_objectSpread2","withFilePrefix","loadScriptFileExport","_loadScriptFileExport","output","loadScriptFileSync","message","loadScriptFileExportSync","loadJsonFile","_loadJsonFile","_asyncToGenerator","mark","file","fs","promises","readFile","loadJsonFileSync","readFileSync","loadFile","_loadFile","loadFileSync"],"mappings":"4yQAQO,SAAAA,EAAAC,yBAEC,MAAAA,EAGJ,GAAA,iBAAAA,EACI,MAAA,IAAAC,MAAAD,GAGJ,MAAA,IAAAC,MAAA,uCACJ,CCXO,SAAAC,EAAAC,EAAAC,GAIH,GAAAD,EAAAE,SAAA,KAAA,CACI,IAAAC,EAAAH,EAAAI,YAAA,oCAMA,IAAAH,IAAA,IAAAA,EAAAI,QAAAC,wBAMJ,CAEA,OAAAN,CACJ,CC3BO,SAAAO,EAAAC,EAAAC,mDAEP,CAEO,SAAAC,EAAAF,EAAAC,GACH,OAAAF,EAAAC,EAAAC,IAAA,iBAAAD,EAAAC,EACJ,CCCO,SAAAE,EAAAC,GACH,QAAAA,GAAA,WAAAC,EAAAD,KAAAE,MAAAC,QAAAH,EAKJ,CCNO,SAAAI,EAAAhB,gCAEP,CCEO,SAAAiB,EAAAC,GAAiF,IAAAC,EAAAC,EAWpF,OAVAF,EAAAA,GAAAA,CAAAA,GAEAA,KAAAA,EAAAA,MAAAA,oBAEA,IAAAA,EAAAG,KAAAC,mCAIA,QAAAF,GAAAD,EAAAD,GAAAK,cAAA,IAAAH,IAAAD,EAAAI,OAAA,IAEAL,CACJ,CAEO,SAAAM,EAAAxB,EAAAyB,sDAQH,IAAAC,EAAAL,EAAAM,MAAA3B,UAGIqB,KAAAA,EAAAA,IAAAA,MAAAA,KAAAA,KAAAA,EAAAA,iCAIR,CC5BA,IAAAO,EAAAC,EAAAC,GAEA,SAAAC,EAAAC,EAAAC,GAAiC,OAAAC,EAAAC,MAAAC,KAAAC,UAAA,CA4BhC,SAAAH,IAAA,qCA1BoC,IAAAI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,IAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAEjC9B,EAAAA,EAAAA,GAEMoB,EAAAA,MAAAA,QAAAA,GAAAA,EAAAA,CAAAA,GAIAC,EAAAA,GAEGC,EAAAA,EAAK,KAAA,EAAA,KAAAA,EAAAF,EAAAhB,QAAA,CAAqBwB,EAAAE,KAAA,GAAA,KAAA,CACtBP,EAAAA,EAAK,KAAA,EAAA,KAAAA,EAAAvB,EAAAG,KAAAC,QAAA,CAA6CwB,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAE,KAAA,EAAApB,EAAAU,EAAAE,GAAA,CAEnDS,UAAAA,EACAC,IAAAA,EAAAA,KAAAA,GACAC,OAAAA,oBAEF,KAAA,EAEF,aAAAR,EAAA,EAAAA,EAAAD,EAAApB,OAAAqB,IACIJ,EAAAA,KAAAA,EAAAA,EAAAA,IAAAA,IACH,KAAA,GAVwDE,IAAGK,EAAAE,KAAA,EAAA,MAAA,KAAA,GAD/BR,IAAGM,EAAAE,KAAA,EAAA,MAAA,KAAA,GAAA,OAAAF,EAAAM,OAAA,SAAAb,GAe5B,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAO,OAAA,GAAAC,QACfnB,MAAAC,KAAAC,UAAA,CAED,SAAAkB,EAAAC,EAAAC,GAAgC,OAAAC,EAAAvB,MAAAC,KAAAC,UAAA,CA2B/B,SAAAqB,IAAA,qCAzBoC,IAAApB,EAAAE,EAAAC,EAAAC,EAAAiB,EAAA,OAAAf,IAAAC,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAEjC9B,EAAAA,EAAAA,GAEMoB,EAAAA,MAAAA,QAAAA,GAAAA,EAAAA,CAAAA,GAIGE,EAAAA,EAAK,KAAA,EAAA,KAAAA,EAAAF,EAAAhB,QAAA,CAAqBsC,EAAAZ,KAAA,GAAA,KAAA,CACtBP,EAAAA,EAAK,KAAA,EAAA,KAAAA,EAAAvB,EAAAG,KAAAC,QAAA,CAA6CsC,EAAAZ,KAAA,GAAA,KAAA,CAAA,OAAAY,EAAAZ,KAAA,EAAApB,EAAAU,EAAAE,GAAA,CAEnDS,UAAAA,EACAC,IAAAA,EAAAA,KAAAA,GACAC,OAAAA,oBAEF,KAAA,EAE2B,cAAvBQ,EAAAA,EAAAA,SAAuB,CAClBC,EAAAZ,KAAA,GAAA,KAAA,CAAA,OAAAY,EAAAR,OAAA,SAAA5B,EAAAmC,GAAA,IACgC,KAAA,GAVclB,IAAGmB,EAAAZ,KAAA,EAAA,MAAA,KAAA,GAD/BR,IAAGoB,EAAAZ,KAAA,EAAA,MAAA,KAAA,GAAA,OAAAY,EAAAR,OAAA,cAAAS,GAgBxB,KAAA,GAAA,IAAA,MAAA,OAAAD,EAAAP,OAAA,GAAAS,QACnB3B,MAAAC,KAAAC,UAAA,CC5DM,SAAA0B,EAAAC,EAAA9C,GAIHA,EAAAA,EAAAA,GAQA,IANA,IAAAoB,EAAAxB,MAAAC,QAAAiD,GAAAA,EAAA,CAAAA,QAMAxB,EAAA,EAAAA,EAAAF,EAAAhB,OAAAkB,IACI,IAAA,IAAAC,EAAA,EAAAA,EAAAvB,EAAAG,KAAAC,OAAAmB,IAQI,uBANIQ,UAAAA,EACAC,IAAAA,EAAAA,KAAAA,GACAC,OAAAA,oBAIJR,EAAA,EAAAA,EAAAD,EAAApB,OAAAqB,IACIJ,EAAAA,KAAAA,EAAAA,EAAAA,IAAAA,IAKZ,OAAAA,CACJ,CAEO,SAAA0B,EAAAD,EAAA9C,GAIHA,EAAAA,EAAAA,GAMA,IAJA,IAAAoB,EAAAxB,MAAAC,QAAAiD,GAAAA,EAAA,CAAAA,GAIAxB,EAAA,EAAAA,EAAAF,EAAAhB,OAAAkB,IACI,IAAA,IAAAC,EAAA,EAAAA,EAAAvB,EAAAG,KAAAC,OAAAmB,IAAA,KAQIkB,eANIV,UAAAA,EACAC,IAAAA,EAAAA,KAAAA,GACAC,OAAAA,oBAIJe,QACA,GAAAP,EACI,OAAAnC,EAAAmC,GAAA,EAER,CAIR,CC1DO,SAAAQ,EAAAzC,EAAA0C,GACH,OAAAA,EACI/C,EAAAgD,KAAA3C,EAAAL,KAAAK,EAAA4C,MAAA5C,EAAApB,+BAIR,CCLO,SAAAiE,EAAAC,EAAAC,GAIH,GAAAA,EAAA,CAEI,IADA,IAAAC,EAAAC,OAAAD,KAAAF,GACAhC,EAAA,EAAAA,EAAAkC,EAAApD,OAAAkB,IACI,GAAAiC,EAAAC,EAAAlC,GAAAgC,EAAAE,EAAAlC,YAEQoC,IAAAA,EAAAA,GACAC,MAAAA,EAAAA,EAAAA,KAKZ,MAAA,IAAAC,EAAA,sCACJ,QAGIF,IAAAA,2CAGR,CChBA,SAAAG,EAAA/C,EAAAC,GAAoC,OAAA+C,EAAA7C,MAAAC,KAAAC,UAAA,CA+DnC,SAAA2C,IAAA,qCA7DkC,IAAAC,EAAAC,EAAA,OAAAtC,IAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,SAK3BiC,EADJ,iBAAAT,EACIS,EAAAA,GAEAA,SAGJ/D,EAAAA,GAAAA,CAAAA,qCAIIgE,EAAAA,EAAAA,GAAAA,MACHpC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,YAGgC,KAAA,EAAA,OAAAF,EAAAM,OAAA,SAAAN,EAAAqC,MAAA,KAAA,GAAA,GAAArC,EAAAC,KAAA,GAAAD,EAAAsC,GAAAtC,EAAA,MAAA,IAAAnC,EAAAmC,EAAAsC,MAAA1E,EAAAoC,EAAAsC,GAAA,QAAA,CAKGtC,EAAAE,KAAA,GAAA,KAAA,CAAA,GAAA9B,EAAAkD,eAAA,yBAAAtB,EAAAsC,GAAAC,MAAA,qBAAAvC,EAAAsC,GAAAC,KAAA,CAOvBvC,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAM,OAAA,SAAA2B,EAAAE,EAAAK,EAAAA,EAAA,CAAA,EAAApE,GAAA,CAAA,EAAA,CAIGkD,eAAAA,MACF,KAAA,GAAA,GAAAlD,EAAAqE,gBAAA,mCAAAzC,EAAAsC,GAAAC,MAAA,+BAAAvC,EAAAsC,GAAAC,KAAA,CAQDvC,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAM,OAAA,SAAA2B,EAAAE,EAAAK,EAAAA,EAAA,CAAA,EAAApE,GAAA,CAAA,EAAA,CAIGqE,gBAAAA,MACF,KAAA,uHAOJ,KAAA,GAAA,OAAAzC,EAAAM,OAAA,SAAAxD,EAAAkD,EAAAsC,KAIuB,KAAA,GAAA,IAAA,MAAA,OAAAtC,EAAAO,OAAA,GAAAC,EAAA,KAAA,CAAA,CAAA,EAAA,WAEpCnB,MAAAC,KAAAC,UAAA,CAED,SAAAmD,EAAAhC,EAAAC,GAA0C,OAAAgC,EAAAtD,MAAAC,KAAAC,UAAA,CAWzC,SAAAoD,IAAA,qCAT4B,IAAAC,EAAA,OAAA9C,IAAAC,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,SAAAY,EAAAZ,KAAA,OAEgB,KAAA,EAA7B,GAAA,WAAAnC,cAAA6E,EAAA,CAE8B9B,EAAAZ,KAAA,EAAA,KAAA,CAAA,OAAAY,EAAAR,OAAA,SAAAmB,EAAAmB,EAAAjB,IACA,KAAA,EAAA,MAAA,IAAAK,EAAA,yCAGkB,KAAA,EAAA,IAAA,MAAA,OAAAlB,EAAAP,OAAA,GAAAS,QAC/D3B,MAAAC,KAAAC,UAAA,CC7EM,SAAAsD,EAAAnB,EAAAtD,GAIH,IAAA+D,MAGIA,EADJ,iBAAAT,EACIS,EAAAA,GAEAA,GAGJ/D,EAAAA,GAAAA,CAAAA,iCAkCA,gCArBQ,IAAAA,EAAAkD,gBAAA,yBAAAvE,EAAAwF,MAAA,qBAAAxF,EAAAwF,MAOI,OAAAM,EAAAV,EAAAK,EAAAA,EAAA,CAAA,EAAApE,GAAA,CAAA,EAAA,CAEIkD,eAAAA,8BAMJwB,QAAAA,EAAAA,EAAAA,WAAAA,EAAAA,aAAAA,qCAGR,YAGJ,CACJ,CAEO,SAAAC,EAAArB,EAAAC,GAIH,IAAAiB,EAAAC,EAAAnB,yBAGI,OAAAD,EAAAmB,EAAAjB,GAGJ,MAAA,IAAAK,EAAA,wCACJ,CC/DA,SAAAgB,EAAA9D,GAAkC,OAAA+D,EAAA5D,MAAAC,KAAAC,UAAA,CAejC,SAAA0D,IAAA,OAAAA,EAAAC,EAAApD,IAAAqD,MAAA,SAAA3C,EAAAtD,GAf6D,IAAAkF,EAAAgB,EAAA,OAAAtD,IAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAOzD,SAJD,iBAAAhD,+CAGIkF,EAAAA,GAAAA,GACHpC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAmD,EAAAC,SAAAC,SAAAnB,GAGoD,KAAA,qEACR,KAAA,EAAA,OAAApC,EAAAC,KAAA,EAAAD,EAAAsC,GAAAtC,EAAA,MAAA,GAAAA,EAAAM,OAAA,SAAAxD,EAAAkD,EAAAsC,KAEZ,KAAA,GAAA,IAAA,MAAA,OAAAtC,EAAAO,OAAA,GAAAC,EAAA,KAAA,CAAA,CAAA,EAAA,UAEpCnB,MAAAC,KAAAC,UAAA,CAEM,SAAAiE,EAAAtG,GACH,IAAAkF,IAEA,iBAAAlF,+CAGIkF,EAAAA,GAAAA,OAIA,IAAAgB,EAAAC,EAAAI,aAAArB,yCAIJ,qBAAA,CACJ,CC9BA,SAAAsB,EAAAxE,GAA8B,OAAAyE,EAAAtE,MAAAC,KAAAC,UAAA,CAa7B,SAAAoE,IAAA,OAAAA,EAAAT,EAAApD,IAAAqD,MAAA,SAAA3C,EAAAtD,GAbyD,IAAA0B,EAAA,OAAAkB,IAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAMrD,GAAA,WAHGtB,EADJ,iBAAA1B,EACI0B,EAAAA,GAEAA,GACHpB,UAAA,CAE6BwC,EAAAE,KAAA,EAAA,KAAA,gCACD,KAAA,iCAGF,KAAA,EAAA,IAAA,MAAA,OAAAF,EAAAO,OAAA,GAAAC,QAC9BnB,MAAAC,KAAAC,UAAA,CAEM,SAAAqE,EAAA1G,GACH,IAAA0B,EAOA,MAAA,WALIA,EADJ,iBAAA1B,EACI0B,EAAAA,GAEAA,GAGJpB,mBAKJ"}